{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,UACnCC,EAAOF,SAASC,cAAc,SAE9BE,EAAgB,CAACC,EAAUC,IACf,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,IAKbN,EAAUa,iBAAiB,SAASC,IAClCA,EAAMC,iBAEQC,OAAOb,EAAKc,SAASX,MAAMY,OACtBF,OAAOb,EAAKc,SAASE,KAAKD,OAC9Bf,EAAKc,SAASG,OAAOF,MAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKC,YAAaD,IAAI,CAEpC,MAAME,EAAaC,QADL,EACsBC,WAAYC,gBAAiBL,GACjEjB,EAAciB,EAAGE,GACdI,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA8B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,OAAW,IAEjEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA8B,OAAOG,QAAQ,sBAAoB1B,QAAeC,OAAW,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, {Notify} from 'notiflix';\n\nconst createBtn = document.querySelector('button');\nconst form = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n  return promise;\n};\n\ncreateBtn.addEventListener('click', event => {\n  event.preventDefault();\n\n  const delay = Number(form.elements.delay.value);\n  const delaySteps = Number(form.elements.step.value);\n  const amount = form.elements.amount.value;\n\n  for (let i = 1; i <= amountInput; i++){\n    let newTime = 0;\n    const actualTime = sumTime(newTime, delayInput, delayStepsInput, i);\n    createPromise(i, actualTime)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`)\n      })\n  }\n});\n\n// DONE"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createBtn","document","querySelector","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","Number","elements","value","step","amount","i","amountInput","actualTime","sumTime","delayInput","delayStepsInput","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.9e6c7b4e.js.map"}